<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

    <aop:config proxy-target-class="true"/>
    <context:annotation-config/>
    <context:component-scan base-package="com.sie.iot.demo.model.dao,com.sie.iot.demo.model.inter.server"/>

    <bean id="dataSource" destroy-method="close" class="com.sie.iot.common.dbcp.BasicDataSourceDecrypt">
        <property name="driverClassName" value="${properties.jdbc.driverClassName}"/>
        <property name="url" value="${properties.jdbc.url}"/>
        <property name="username" value="${properties.jdbc.username}"/>
        <property name="password" value="${properties.jdbc.password}"/>
        <property name="validationQuery" value="${properties.jdbc.validationQuery}"/>
        <property name="initialSize" value="${properties.jdbc.initialSize}"/>
        <property name="maxActive" value="${properties.jdbc.maxActive}"/>
        <property name="maxIdle" value="${properties.jdbc.maxIdle}"/>
        <property name="minIdle" value="${properties.jdbc.minIdle}"/>
    </bean>
    <!--<bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">-->
        <!---->
    <!--</bean>-->

    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan">
            <list>
                <value>com.sie.iot.demo.model.entities</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <!--<prop key="hibernate.hbm2ddl.auto">update</prop>-->
                <prop key="javax.persistence.validation.mode">none</prop>
            </props>
        </property>
    </bean>

    <bean id="hibernateTemplete" class="org.springframework.orm.hibernate5.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <!-- 配置事务的传播特性 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="find*" read-only="true" />
            <tx:method name="*" read-only="true" />
        </tx:attributes>
    </tx:advice>
    <!-- 那些类的哪些方法参与事务 -->
    <aop:config><!--|| execution(* com.sie.saaf.*.model.dao.readonly.*.*(..))-->
        <aop:pointcut id="businessService" expression="execution(* com.sie.iot.demo.model.inter.server.*.*(..)) || execution(* com.sie.iot.common.model.inter.server.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="businessService" order="0"/>
    </aop:config>
</beans>