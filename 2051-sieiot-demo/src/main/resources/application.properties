management.metrics.export.prometheus.enabled=true
management.metrics.export.prometheus.step=1ms
management.metrics.export.prometheus.descriptions=true

management.metrics.web.server.auto-time-requests=true
management.endpoints.web.exposure.include=*
management.metrics.tags.application=${spring.application.name}

#spring.boot.admin.url=${spring.boot.admin.url}

server.tomcat.max-threads=2000
server.tomcat.accept-count=200
server.tomcat.max-connections=2000

# 使用IP注册
 eureka.instance.preferIpAddress=true
#心跳间隔
eureka.instance.lease-renewal-interval-in-seconds=3
#服务失效时间：如果多久没有收到请求，则可以删除服务
eureka.instance.lease-expiration-duration-in-seconds=7

# 注册自身到eureka服务器
eureka.client.registerWithEureka=true
eureka.client.service-url.defaultZone=http://localhost:9010/eureka/
#  http://myhostServer:9011/eureka/,http://myhostServer:9012/eureka/

# Eureka Server 自我保护系数，当enable-self-preservation=true时，启作用
 eureka.server.enable-self-preservation=false
# 设置清理间隔，单位为毫秒，默认为0
eureka.server.eviction-interval-timer-in-ms=3000
# 设置如果Eureka Server启动时无法从临近Eureka Server节点获取注册信息，它多久不对外提供注册服务
eureka.server.wait-time-in-ms-when-sync-empty=6000000
# 集群之间相互更新节点信息的时间频率
eureka.server.peer-eureka-nodes-update-interval-ms=60000



properties.jdbc.driverClassName=com.mysql.jdbc.Driver
properties.jdbc.url=0273a20d38cf3daca43abea56319a2013a0c69fda1a828015452b0e105cd6a0ce0fc283160dbdcffce6a97fe6e2762b58b141dfa2cdedad039b4b95bdb37d990551aa64a6e81c1cff8c9e1ecd1b21e44b9cf4cd829dfa30234d080a2e96cf301d648a8320b350c42a9366510d8a73a009bd02ed2be3001cb
properties.jdbc.username=04eb21457435b26f
properties.jdbc.password=345246e521a703df2f6250f16e8fad1f
#properties.jdbc.url=jdbc:mysql://192.168.88.207:3306/sieiotcommonbase?useUnicode=true&characterEncoding=UTF-8&useSSL=true&autoReconnect=true
#properties.jdbc.username=sieiot
#properties.jdbc.password=iphonexsie
properties.jdbc.validationQuery=SELECT 1
properties.jdbc.initialSize=20
properties.jdbc.maxActive=800
properties.jdbc.maxIdle=50
properties.jdbc.minIdle=20


#全局配置
# 请求连接的超时时间 默认的时间为 1 秒
ribbon.ConnectTimeout=60000
# 请求处理的超时时间
ribbon.ReadTimeout=60000

log.root.level=info

